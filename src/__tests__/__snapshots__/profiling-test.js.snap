// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`profiling CommitDetails should be collected for each commit: CommitDetails commitIndex: 0 1`] = `
Object {
  "actualDurations": Map {
    1 => 12,
    3 => 12,
    4 => 0,
    5 => 1,
    6 => 1,
  },
  "changeDescriptions": Map {},
  "commitIndex": 0,
  "interactions": Array [],
  "rootID": 1,
  "schedulers": Set {
    2,
  },
  "selfDurations": Map {
    1 => 0,
    3 => 10,
    4 => 0,
    5 => 1,
    6 => 1,
  },
}
`;

exports[`profiling CommitDetails should be collected for each commit: CommitDetails commitIndex: 1 1`] = `
Object {
  "actualDurations": Map {
    4 => 0,
    5 => 1,
    7 => 2,
    3 => 13,
    1 => 13,
  },
  "changeDescriptions": Map {
    4 => Object {
      "didHooksChange": false,
      "props": Array [],
      "state": Array [],
    },
    5 => Object {
      "didHooksChange": false,
      "props": Array [],
      "state": Array [],
    },
    3 => Object {
      "didHooksChange": false,
      "props": Array [
        "count",
      ],
      "state": Array [],
    },
  },
  "commitIndex": 1,
  "interactions": Array [],
  "rootID": 1,
  "schedulers": Set {
    1,
  },
  "selfDurations": Map {
    4 => 0,
    5 => 1,
    7 => 2,
    3 => 10,
    1 => 0,
  },
}
`;

exports[`profiling CommitDetails should be collected for each commit: CommitDetails commitIndex: 2 1`] = `
Object {
  "actualDurations": Map {
    4 => 0,
    3 => 10,
    1 => 10,
  },
  "changeDescriptions": Map {
    4 => Object {
      "didHooksChange": false,
      "props": Array [],
      "state": Array [],
    },
    3 => Object {
      "didHooksChange": false,
      "props": Array [
        "count",
      ],
      "state": Array [],
    },
  },
  "commitIndex": 2,
  "interactions": Array [],
  "rootID": 1,
  "schedulers": Set {
    2,
  },
  "selfDurations": Map {
    4 => 0,
    3 => 10,
    1 => 0,
  },
}
`;

exports[`profiling CommitDetails should be collected for each commit: CommitDetails commitIndex: 3 1`] = `
Object {
  "actualDurations": Map {
    3 => 10,
    1 => 10,
  },
  "changeDescriptions": Map {
    3 => Object {
      "didHooksChange": false,
      "props": Array [
        "count",
      ],
      "state": Array [],
    },
  },
  "commitIndex": 3,
  "interactions": Array [],
  "rootID": 1,
  "schedulers": Set {
    1,
  },
  "selfDurations": Map {
    3 => 10,
    1 => 0,
  },
}
`;

exports[`profiling CommitDetails should be collected for each commit: imported data 1`] = `
Object {
  "commitDetails": Array [
    Object {
      "actualDurations": Map {
        1 => 12,
        3 => 12,
        4 => 0,
        5 => 1,
        6 => 1,
      },
      "changeDescriptions": Map {},
      "commitIndex": 0,
      "interactions": Array [],
      "rootID": 1,
      "schedulers": Set {
        2,
      },
      "selfDurations": Map {
        1 => 0,
        3 => 10,
        4 => 0,
        5 => 1,
        6 => 1,
      },
    },
    Object {
      "actualDurations": Map {
        4 => 0,
        5 => 1,
        7 => 2,
        3 => 13,
        1 => 13,
      },
      "changeDescriptions": Map {
        4 => Object {
          "didHooksChange": false,
          "props": Array [],
          "state": Array [],
        },
        5 => Object {
          "didHooksChange": false,
          "props": Array [],
          "state": Array [],
        },
        3 => Object {
          "didHooksChange": false,
          "props": Array [
            "count",
          ],
          "state": Array [],
        },
      },
      "commitIndex": 1,
      "interactions": Array [],
      "rootID": 1,
      "schedulers": Set {
        1,
      },
      "selfDurations": Map {
        4 => 0,
        5 => 1,
        7 => 2,
        3 => 10,
        1 => 0,
      },
    },
    Object {
      "actualDurations": Map {
        4 => 0,
        3 => 10,
        1 => 10,
      },
      "changeDescriptions": Map {
        4 => Object {
          "didHooksChange": false,
          "props": Array [],
          "state": Array [],
        },
        3 => Object {
          "didHooksChange": false,
          "props": Array [
            "count",
          ],
          "state": Array [],
        },
      },
      "commitIndex": 2,
      "interactions": Array [],
      "rootID": 1,
      "schedulers": Set {
        2,
      },
      "selfDurations": Map {
        4 => 0,
        3 => 10,
        1 => 0,
      },
    },
    Object {
      "actualDurations": Map {
        3 => 10,
        1 => 10,
      },
      "changeDescriptions": Map {
        3 => Object {
          "didHooksChange": false,
          "props": Array [
            "count",
          ],
          "state": Array [],
        },
      },
      "commitIndex": 3,
      "interactions": Array [],
      "rootID": 1,
      "schedulers": Set {
        1,
      },
      "selfDurations": Map {
        3 => 10,
        1 => 0,
      },
    },
  ],
  "interactions": Object {
    "interactions": Array [],
    "rootID": 1,
  },
  "profilingOperations": Map {
    1 => Array [
      Uint32Array [
        1,
        1,
        17,
        6,
        80,
        97,
        114,
        101,
        110,
        116,
        5,
        67,
        104,
        105,
        108,
        100,
        1,
        48,
        1,
        49,
        1,
        1,
        11,
        1,
        1,
        4,
        1,
        12000,
        1,
        3,
        5,
        1,
        0,
        1,
        0,
        4,
        3,
        12000,
        1,
        4,
        5,
        3,
        3,
        2,
        3,
        4,
        4,
        0,
        1,
        5,
        5,
        3,
        3,
        2,
        4,
        4,
        5,
        1000,
        1,
        6,
        8,
        3,
        3,
        2,
        0,
        4,
        6,
        1000,
      ],
      Uint32Array [
        1,
        1,
        8,
        5,
        67,
        104,
        105,
        108,
        100,
        1,
        50,
        1,
        7,
        5,
        3,
        3,
        1,
        2,
        4,
        7,
        2000,
        4,
        3,
        14000,
        3,
        3,
        4,
        4,
        5,
        7,
        6,
        4,
        1,
        14000,
      ],
      Uint32Array [
        1,
        1,
        0,
        2,
        2,
        7,
        5,
        4,
        3,
        11000,
        3,
        3,
        2,
        4,
        6,
        4,
        1,
        11000,
      ],
      Uint32Array [
        1,
        1,
        0,
        2,
        1,
        4,
      ],
    ],
  },
  "profilingSnapshots": Map {
    1 => Map {},
  },
  "profilingSummary": Object {
    "commitDurations": Array [
      12,
      13,
      10,
      10,
    ],
    "commitTimes": Array [
      12,
      25,
      35,
      45,
    ],
    "initialTreeBaseDurations": Map {},
    "interactionCount": 0,
    "rootID": 1,
  },
  "version": 4,
}
`;

exports[`profiling CommitDetails should calculate a self duration based on actual children (not filtered children): CommitDetails with filtered self durations 1`] = `
Object {
  "actualDurations": Map {
    1 => 16,
    3 => 16,
    4 => 1,
    6 => 1,
  },
  "changeDescriptions": Map {},
  "commitIndex": 0,
  "interactions": Array [],
  "rootID": 1,
  "schedulers": Set {
    2,
  },
  "selfDurations": Map {
    1 => 0,
    3 => 10,
    4 => 1,
    6 => 1,
  },
}
`;

exports[`profiling CommitDetails should calculate self duration correctly for suspended views: CommitDetails with filtered self durations 1`] = `
Object {
  "actualDurations": Map {
    1 => 15,
    3 => 15,
    4 => 5,
    5 => 2,
  },
  "changeDescriptions": Map {},
  "commitIndex": 0,
  "interactions": Array [],
  "rootID": 1,
  "schedulers": Set {
    2,
  },
  "selfDurations": Map {
    1 => 0,
    3 => 10,
    4 => 3,
    5 => 2,
  },
}
`;

exports[`profiling CommitDetails should calculate self duration correctly for suspended views: CommitDetails with filtered self durations 2`] = `
Object {
  "actualDurations": Map {
    6 => 3,
    4 => 3,
  },
  "changeDescriptions": Map {},
  "commitIndex": 1,
  "interactions": Array [],
  "rootID": 1,
  "schedulers": Set {},
  "selfDurations": Map {
    6 => 3,
    4 => 0,
  },
}
`;

exports[`profiling FiberCommits should be collected for each rendered fiber: FiberCommits: element 3 1`] = `
Object {
  "commitDurations": Array [
    0,
    10,
    1,
    10,
    2,
    10,
  ],
  "fiberID": 3,
  "rootID": 1,
}
`;

exports[`profiling FiberCommits should be collected for each rendered fiber: FiberCommits: element 4 1`] = `
Object {
  "commitDurations": Array [
    0,
    0,
    1,
    0,
    2,
    0,
  ],
  "fiberID": 4,
  "rootID": 1,
}
`;

exports[`profiling FiberCommits should be collected for each rendered fiber: FiberCommits: element 5 1`] = `
Object {
  "commitDurations": Array [
    0,
    1,
  ],
  "fiberID": 5,
  "rootID": 1,
}
`;

exports[`profiling FiberCommits should be collected for each rendered fiber: FiberCommits: element 6 1`] = `
Object {
  "commitDurations": Array [
    1,
    1,
    2,
    1,
  ],
  "fiberID": 6,
  "rootID": 1,
}
`;

exports[`profiling FiberCommits should be collected for each rendered fiber: FiberCommits: element 7 1`] = `
Object {
  "commitDurations": Array [
    2,
    2,
  ],
  "fiberID": 7,
  "rootID": 1,
}
`;

exports[`profiling FiberCommits should be collected for each rendered fiber: imported data 1`] = `
Object {
  "commitDetails": Array [
    Object {
      "actualDurations": Map {
        1 => 11,
        3 => 11,
        4 => 0,
        5 => 1,
      },
      "changeDescriptions": Map {},
      "commitIndex": 0,
      "interactions": Array [],
      "rootID": 1,
      "schedulers": Set {
        2,
      },
      "selfDurations": Map {
        1 => 0,
        3 => 10,
        4 => 0,
        5 => 1,
      },
    },
    Object {
      "actualDurations": Map {
        4 => 0,
        6 => 1,
        3 => 11,
        1 => 11,
      },
      "changeDescriptions": Map {
        4 => Object {
          "didHooksChange": false,
          "props": Array [],
          "state": Array [],
        },
        3 => Object {
          "didHooksChange": false,
          "props": Array [
            "count",
          ],
          "state": Array [],
        },
      },
      "commitIndex": 1,
      "interactions": Array [],
      "rootID": 1,
      "schedulers": Set {
        1,
      },
      "selfDurations": Map {
        4 => 0,
        6 => 1,
        3 => 10,
        1 => 0,
      },
    },
    Object {
      "actualDurations": Map {
        4 => 0,
        6 => 1,
        7 => 2,
        3 => 13,
        1 => 13,
      },
      "changeDescriptions": Map {
        4 => Object {
          "didHooksChange": false,
          "props": Array [],
          "state": Array [],
        },
        6 => Object {
          "didHooksChange": false,
          "props": Array [],
          "state": Array [],
        },
        3 => Object {
          "didHooksChange": false,
          "props": Array [
            "count",
          ],
          "state": Array [],
        },
      },
      "commitIndex": 2,
      "interactions": Array [],
      "rootID": 1,
      "schedulers": Set {
        2,
      },
      "selfDurations": Map {
        4 => 0,
        6 => 1,
        7 => 2,
        3 => 10,
        1 => 0,
      },
    },
  ],
  "interactions": Object {
    "interactions": Array [],
    "rootID": 1,
  },
  "profilingOperations": Map {
    1 => Array [
      Uint32Array [
        1,
        1,
        15,
        6,
        80,
        97,
        114,
        101,
        110,
        116,
        5,
        67,
        104,
        105,
        108,
        100,
        1,
        48,
        1,
        1,
        11,
        1,
        1,
        4,
        1,
        11000,
        1,
        3,
        5,
        1,
        0,
        1,
        0,
        4,
        3,
        11000,
        1,
        4,
        5,
        3,
        3,
        2,
        3,
        4,
        4,
        0,
        1,
        5,
        8,
        3,
        3,
        2,
        0,
        4,
        5,
        1000,
      ],
      Uint32Array [
        1,
        1,
        8,
        5,
        67,
        104,
        105,
        108,
        100,
        1,
        49,
        1,
        6,
        5,
        3,
        3,
        1,
        2,
        4,
        6,
        1000,
        4,
        3,
        12000,
        3,
        3,
        3,
        4,
        6,
        5,
        4,
        1,
        12000,
      ],
      Uint32Array [
        1,
        1,
        8,
        5,
        67,
        104,
        105,
        108,
        100,
        1,
        50,
        1,
        7,
        5,
        3,
        3,
        1,
        2,
        4,
        7,
        2000,
        4,
        3,
        14000,
        3,
        3,
        4,
        4,
        6,
        7,
        5,
        4,
        1,
        14000,
      ],
    ],
  },
  "profilingSnapshots": Map {
    1 => Map {},
  },
  "profilingSummary": Object {
    "commitDurations": Array [
      11,
      11,
      13,
    ],
    "commitTimes": Array [
      11,
      22,
      35,
    ],
    "initialTreeBaseDurations": Map {},
    "interactionCount": 0,
    "rootID": 1,
  },
  "version": 4,
}
`;

exports[`profiling Interactions should be collected for every traced interaction: Interactions 1`] = `
Object {
  "interactions": Array [
    Object {
      "__count": 1,
      "commits": Array [
        0,
      ],
      "id": 0,
      "name": "mount: one child",
      "timestamp": 0,
    },
    Object {
      "__count": 0,
      "commits": Array [
        1,
      ],
      "id": 1,
      "name": "update: two children",
      "timestamp": 11,
    },
  ],
  "rootID": 1,
}
`;

exports[`profiling Interactions should be collected for every traced interaction: imported data 1`] = `
Object {
  "commitDetails": Array [
    Object {
      "actualDurations": Map {
        1 => 11,
        3 => 11,
        4 => 0,
        5 => 1,
      },
      "changeDescriptions": Map {},
      "commitIndex": 0,
      "interactions": Array [
        Object {
          "__count": 1,
          "id": 0,
          "name": "mount: one child",
          "timestamp": 0,
        },
      ],
      "rootID": 1,
      "schedulers": Set {
        2,
      },
      "selfDurations": Map {
        1 => 0,
        3 => 10,
        4 => 0,
        5 => 1,
      },
    },
    Object {
      "actualDurations": Map {
        4 => 0,
        6 => 1,
        3 => 11,
        1 => 11,
      },
      "changeDescriptions": Map {
        4 => Object {
          "didHooksChange": false,
          "props": Array [],
          "state": Array [],
        },
        3 => Object {
          "didHooksChange": false,
          "props": Array [
            "count",
          ],
          "state": Array [],
        },
      },
      "commitIndex": 1,
      "interactions": Array [
        Object {
          "__count": 0,
          "id": 1,
          "name": "update: two children",
          "timestamp": 11,
        },
      ],
      "rootID": 1,
      "schedulers": Set {
        1,
      },
      "selfDurations": Map {
        4 => 0,
        6 => 1,
        3 => 10,
        1 => 0,
      },
    },
  ],
  "interactions": Object {
    "interactions": Array [
      Object {
        "__count": 1,
        "commits": Array [
          0,
        ],
        "id": 0,
        "name": "mount: one child",
        "timestamp": 0,
      },
      Object {
        "__count": 0,
        "commits": Array [
          1,
        ],
        "id": 1,
        "name": "update: two children",
        "timestamp": 11,
      },
    ],
    "rootID": 1,
  },
  "profilingOperations": Map {
    1 => Array [
      Uint32Array [
        1,
        1,
        15,
        6,
        80,
        97,
        114,
        101,
        110,
        116,
        5,
        67,
        104,
        105,
        108,
        100,
        1,
        48,
        1,
        1,
        11,
        1,
        1,
        4,
        1,
        11000,
        1,
        3,
        5,
        1,
        0,
        1,
        0,
        4,
        3,
        11000,
        1,
        4,
        5,
        3,
        3,
        2,
        3,
        4,
        4,
        0,
        1,
        5,
        8,
        3,
        3,
        2,
        0,
        4,
        5,
        1000,
      ],
      Uint32Array [
        1,
        1,
        8,
        5,
        67,
        104,
        105,
        108,
        100,
        1,
        49,
        1,
        6,
        5,
        3,
        3,
        1,
        2,
        4,
        6,
        1000,
        4,
        3,
        12000,
        3,
        3,
        3,
        4,
        6,
        5,
        4,
        1,
        12000,
      ],
    ],
  },
  "profilingSnapshots": Map {
    1 => Map {},
  },
  "profilingSummary": Object {
    "commitDurations": Array [
      11,
      11,
    ],
    "commitTimes": Array [
      11,
      22,
    ],
    "initialTreeBaseDurations": Map {},
    "interactionCount": 2,
    "rootID": 1,
  },
  "version": 4,
}
`;

exports[`profiling ProfilingSummary should be collected for each commit: ProfilingSummary 1`] = `
Object {
  "commitDurations": Array [
    13,
    10,
    10,
  ],
  "commitTimes": Array [
    13,
    23,
    33,
  ],
  "initialTreeBaseDurations": Map {
    1 => 12,
    2 => 12,
    3 => 0,
    4 => 1,
    5 => 1,
  },
  "interactionCount": 0,
  "rootID": 1,
}
`;

exports[`profiling ProfilingSummary should be collected for each commit: imported data 1`] = `
Object {
  "commitDetails": Array [
    Object {
      "actualDurations": Map {
        3 => 0,
        4 => 1,
        6 => 2,
        2 => 13,
        1 => 13,
      },
      "changeDescriptions": Map {
        3 => Object {
          "didHooksChange": false,
          "props": Array [],
          "state": Array [],
        },
        4 => Object {
          "didHooksChange": false,
          "props": Array [],
          "state": Array [],
        },
        2 => Object {
          "didHooksChange": false,
          "props": Array [
            "count",
          ],
          "state": Array [],
        },
      },
      "commitIndex": 0,
      "interactions": Array [],
      "rootID": 1,
      "schedulers": Set {
        1,
      },
      "selfDurations": Map {
        3 => 0,
        4 => 1,
        6 => 2,
        2 => 10,
        1 => 0,
      },
    },
    Object {
      "actualDurations": Map {
        3 => 0,
        2 => 10,
        1 => 10,
      },
      "changeDescriptions": Map {
        3 => Object {
          "didHooksChange": false,
          "props": Array [],
          "state": Array [],
        },
        2 => Object {
          "didHooksChange": false,
          "props": Array [
            "count",
          ],
          "state": Array [],
        },
      },
      "commitIndex": 1,
      "interactions": Array [],
      "rootID": 1,
      "schedulers": Set {
        7,
      },
      "selfDurations": Map {
        3 => 0,
        2 => 10,
        1 => 0,
      },
    },
    Object {
      "actualDurations": Map {
        2 => 10,
        1 => 10,
      },
      "changeDescriptions": Map {
        2 => Object {
          "didHooksChange": false,
          "props": Array [
            "count",
          ],
          "state": Array [],
        },
      },
      "commitIndex": 2,
      "interactions": Array [],
      "rootID": 1,
      "schedulers": Set {
        1,
      },
      "selfDurations": Map {
        2 => 10,
        1 => 0,
      },
    },
  ],
  "interactions": Object {
    "interactions": Array [],
    "rootID": 1,
  },
  "profilingOperations": Map {
    1 => Array [
      Uint32Array [
        1,
        1,
        8,
        5,
        67,
        104,
        105,
        108,
        100,
        1,
        50,
        1,
        6,
        5,
        2,
        2,
        1,
        2,
        4,
        6,
        2000,
        4,
        2,
        14000,
        3,
        2,
        4,
        3,
        4,
        6,
        5,
        4,
        1,
        14000,
      ],
      Uint32Array [
        1,
        1,
        0,
        2,
        2,
        6,
        4,
        4,
        2,
        11000,
        3,
        2,
        2,
        3,
        5,
        4,
        1,
        11000,
      ],
      Uint32Array [
        1,
        1,
        0,
        2,
        1,
        3,
      ],
    ],
  },
  "profilingSnapshots": Map {
    1 => Map {
      1 => Object {
        "children": Array [
          2,
        ],
        "displayName": null,
        "id": 1,
        "key": null,
        "type": 11,
      },
      2 => Object {
        "children": Array [
          3,
          4,
          5,
        ],
        "displayName": "Parent",
        "id": 2,
        "key": null,
        "type": 5,
      },
      3 => Object {
        "children": Array [],
        "displayName": "Child",
        "id": 3,
        "key": "0",
        "type": 5,
      },
      4 => Object {
        "children": Array [],
        "displayName": "Child",
        "id": 4,
        "key": "1",
        "type": 5,
      },
      5 => Object {
        "children": Array [],
        "displayName": "Child",
        "id": 5,
        "key": null,
        "type": 8,
      },
    },
  },
  "profilingSummary": Object {
    "commitDurations": Array [
      13,
      10,
      10,
    ],
    "commitTimes": Array [
      13,
      23,
      33,
    ],
    "initialTreeBaseDurations": Map {
      1 => 12,
      2 => 12,
      3 => 0,
      4 => 1,
      5 => 1,
    },
    "interactionCount": 0,
    "rootID": 1,
  },
  "version": 4,
}
`;
